FROM arm32v7/ubuntu:18.04

RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    wget \
    gnupg \
    lsb-release \
    jq \
    net-tools \
    iptables \
    iproute2 \
    systemd

# RUN AZ_REPO=$(lsb_release -cs) && \
#     echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
#     tee /etc/apt/sources.list.d/azure-cli.list && \
#     curl -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add -

# RUN curl https://packages.microsoft.com/config/debian/stretch/multiarch/prod.list > ./microsoft-prod.list
# RUN cp ./microsoft-prod.list /etc/apt/sources.list.d/
# RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
# RUN cp ./microsoft.gpg /etc/apt/trusted.gpg.d/

# RUN apt-get update && apt-get install -y --no-install-recommends \
#     azure-cli \
#     moby-cli \
#     moby-engine && \ 
#     apt-get install -y --no-install-recommends iotedge=1.0.0-1   

# RUN az extension add --name azure-iot

# COPY entrypoint.sh /usr/local/bin/
# RUN chmod +x /usr/local/bin/entrypoint.sh

# VOLUME /var/lib/docker

# EXPOSE 2375
# EXPOSE 15580
# EXPOSE 15581

# ENTRYPOINT ["bash", "entrypoint.sh"]

# CMD []

RUN wget https://azurecliprod.blob.core.windows.net/install.py -O azure-cli-install.py && \
    chmod +x azure-cli-install.py && \
    yes "" | ./azure-cli-install.py

RUN cp /root/bin/az /usr/local/bin && \
    az extension add --name azure-cli-iot-ext

RUN curl -L https://aka.ms/moby-engine-armhf-latest -o moby_engine.deb && dpkg -i ./moby_engine.deb && rm ./moby_engine.deb && \
    curl -L https://aka.ms/moby-cli-armhf-latest -o moby_cli.deb && dpkg -i ./moby_cli.deb && rm ./moby_cli.deb

RUN curl -L https://github.com/Azure/azure-iotedge/releases/download/1.0.0/libiothsm-std_1.0.0-1_armhf.deb -o libiothsm-std.deb && dpkg -i ./libiothsm-std.deb && rm ./libiothsm-std.deb && \
    curl -L https://github.com/Azure/azure-iotedge/releases/download/1.0.0/iotedge_1.0.0-1_armhf.deb -o iotedge.deb && dpkg -i ./iotedge.deb && rm ./iotedge.deb

# COPY entrypoint.sh /usr/local/bin/
# RUN chmod +x /usr/local/bin/entrypoint.sh

# VOLUME /var/lib/docker

# EXPOSE 2375
# EXPOSE 15580
# EXPOSE 15581

# RUN ln -s /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0 /lib/arm-linux-gnueabihf/libcrypto.so.1.0.2 && \
#     ln -s /usr/lib/arm-linux-gnueabihf/libssl.so.1.0.0 /lib/arm-linux-gnueabihf/libssl.so.1.0.2

# ENTRYPOINT ["bash", "entrypoint.sh"]

# CMD []